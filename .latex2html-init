#LaTeX2HTML Version 96.1 : dot.latex2html-init
#
### Command Line Argument Defaults #######################################

#$MAX_SPLIT_DEPTH = 8;	# Stop making separate files at this depth. Trying to stop in paragraph
$MAX_SPLIT_DEPTH = 6;	# Stop making separate files at this depth. 

#$MAX_LINK_DEPTH = 4;    # Stop showing child nodes at this depth   
$MAX_LINK_DEPTH = 3;    # Stop showing child nodes at this depth   

$NOLATEX = 0;           # 1 = do not pass unknown environments to Latex

$EXTERNAL_IMAGES = 0;   # 1 = leave the images outside the document 

$ASCII_MODE = 0;        # 1 = do not use any icons or internal images

# 1 =  use links to external postscript images rather than inlined bitmap
# images.
$PS_IMAGES = 0;

$TITLE = $default_title;      # The default is "No Title" 

$DESTDIR = '';         # Put the result in this directory 

# When this is set, the generated HTML files will be placed in the 
# current directory. If set to 0 the default behaviour is to create (or reuse)
# another file directory.
$NO_SUBDIR = 0;


require "copyright.pm";

# Supply your own string if you don't like the default <Name> <Date>
$ADDRESS = "<I>Casiano Rodríguez León<BR>$copyright\n<br>$address_data[1]</I>";
#$ADDRESS = "<I>$address_data[0] <BR>\n$address_data[1]</I>";

$NO_NAVIGATION = 0;	# 1 = do not put a navigation panel at the top of each page

# Put navigation links at the top of each  page.  If  the page  exceeds
# $WORDS_IN_PAGE  number of words then put one at the bottom of the page.
$AUTO_NAVIGATION = 1;

# Put navigation links at the bottom  of  each page
$BOTTOM_NAVIGATION = 1; 

# Put a link to the index page in  the  navigation  panel
$INDEX_IN_NAVIGATION = 1;

# Put a link to the table of contents  in  the  navigation  panel
$CONTENTS_IN_NAVIGATION = 1;

# Put a link to the next logical page  in  the  navigation  panel
$NEXT_PAGE_IN_NAVIGATION = 1;

# Put a link to the previous logical page  in  the  navigation  panel
$PREVIOUS_PAGE_IN_NAVIGATION = 1;

$INFO = 0;              # 0 = do not make a "About this document..." section 

# Reuse images generated during previous runs
$REUSE = 2;

# When this is 1, the section numbers are shown. The section numbers should 
# then match those that would have bee produced by LaTeX.
# The correct section numbers are obtained from the $FILE.aux file generated 
# by LaTeX.
# Hiding the seciton numbers encourages use of particular sections 
# as standalone documents. In this case the cross reference to a section 
# is shown using the default symbol rather than the section number.
$SHOW_SECTION_NUMBERS = 0;

### Other global variables ###############################################
$CHILDLINE = "<BR> <HR>\n";

# This is the line width measured in pixels and it is used to right justify
# equations and equation arrays; 
$LINE_WIDTH = 500;		

# Used in conjunction with AUTO_NAVIGATION
$WORDS_IN_PAGE = 300;	

# Affects ONLY the way accents are processed 
$default_language = 'spanish';	

# The value of this variable determines how many words to use in each 
# title that is added to the navigation panel (see below)
# 
$WORDS_IN_NAVIGATION_PANEL_TITLES = 4;

# This number will determine the size of the equations, special characters,
# and anything which will be converted into an inlined image
# *except* "image generating environments" such as "figure", "table" 
# or "minipage".
# Effective values are those greater than 0.
# Sensible values are between 0.1 - 4.
$MATH_SCALE_FACTOR = 1.6;

# This number will determine the size of 
# image generating environments such as "figure", "table" or "minipage".
# Effective values are those greater than 0.
# Sensible values are between 0.1 - 4.
$FIGURE_SCALE_FACTOR = 1.6;


#  If this is set then intermediate files are left for later inspection.
#  This includes $$_images.tex and $$_images.log created during image
#  conversion.
#  Caution: Intermediate files can be *enormous*.
$DEBUG = 0;

#  If both of the following two variables are set then the "Up" button
#  of the navigation panel in the first node/page of a converted document
#  will point to $EXTERNAL_UP_LINK. $EXTERNAL_UP_TITLE should be set
#  to some text which describes this external link.
#$EXTERNAL_UP_LINK = "http://nereida.deioc.ull.es/~pp2/";
$EXTERNAL_UP_LINK = "http://nereida.deioc.ull.es/~pp2/";
$EXTERNAL_UP_TITLE = "PP2";
#$EXTERNAL_UP_TITLE = "PL";

# If this is set then the resulting HTML will look marginally better if viewed 
# with Netscape.
$NETSCAPE_HTML = 0;

# Valid paper sizes are "letter", "legal", "a4","a3","a2" and "a0"
# Paper sizes has no effect other than in the time it takes to create inlined
# images and in whether large images can be created at all ie
#  - larger paper sizes *MAY* help with large image problems 
#  - smaller paper sizes are quicker to handle
#$PAPERSIZE = "a4";
$PAPERSIZE = "a4";
#$PAPERSIZE = "letter";

# Replace "english" with another language in order to tell LaTeX2HTML that you 
# want some generated section titles (eg "Table of Contents" or "References")
# to appear in a different language. Currently only "english" and "french"
# is supported but it is very easy to add your own. See the example in the
# file "latex2html.config" 
$TITLES_LANGUAGE = "spanish";

print "Spanish style interface for LaTeX2HTML\n";

# Put Spanish equivalents here for headings/dates/ etc when
# latex2html start supporting them ...

sub main'spanish_translation { @_[0] }



package main;

if (defined &addto_languages) { &addto_languages('spanish') };

sub do_cmd_spanishTeX {
    # Just in case we pass things to LaTeX
    $default_language = 'spanish';
    $latex_body .= "\\spanishTeX\n";
    @_[0];
}

sub do_cmd_originalTeX {
    # Just in case we pass things to LaTeX
    $default_language = 'original';
    $latex_body .= "\\originalTeX\n";
    @_[0];
}

# Names selected to match those in spanish.sty
#
sub spanish_titles {
    $toc_title = "\\'Indice General";
    $lof_title = "\\'Indice de Figuras";
    $lot_title = "\\'Indice de Tablas";
    $idx_title = "\\'Indice de Materias";
    $ref_title = "Referencias";
    $bib_title = "Bibliograf\\'ia";
    $abs_title = "Resumen";
    $app_title = "Ap\\'endice";
    $pre_title = "Prefacio";
    $foot_title = "Notas al pie";
##    $thm_title = "";
    $fig_name = "Figura";
    $tab_name = "Tabla";
    $prf_name = "Demostraci\\'on";
##    $date_name = "";
    $page_name = "P\\'agina";
  #  Sectioning-level titles
    $part_name = "Parte";
    $chapter_name = "Cap\\'itulo";
#    $section_name = "";
#    $subsection_name = "";
#    $subsubsection_name = "";
#    $paragraph_name = "";
  #  Misc. strings
    $child_name = "Subsecciones";
    $info_title = "Sobre este documento...";
    $also_name = "v\\'ease tambi\\'en";
    $see_name = "v\\'ease";
  #  names in navigation panels
##    $next_name = "";
##    $up_name = "";
##    $prev_name = "";
##    $group_name = "";
  #  mail fields
    $encl_name = "Adjunto";
    $headto_name = "A";
    $cc_name = "Copia a";

    @Month = ('', 'enero', "febrero", 'marzo', 'abril', 'mayo',
              'junio', 'julio', "agosto", 'septiembre', 'octubre',
              'noviembre', "diciembre");
    $GENERIC_WORDS =
      join('|',"a","ante","cabe","con","contra","de","desde","en",
      "entre","hacia","hasta","para","por","si","sin","sobre",
      "tras","un","una","uno","unas","unos","el","la","lo","le",
      "los","las");
}

sub spanish_today {
    local($today) = &get_date();
    $today =~ s|(\d+)/0?(\d+)/|$2 de $Month[$1] |;
    join('',$today,$_[0]);
}

# ... and use it.
&spanish_titles;
$default_language = 'spanish';
$TITLES_LANGUAGE = "spanish";
$spanish_encoding = 'iso-8859-1';

### Navigation Panel ##########################################################
#
# The navigation panel is constructed out of buttons and section titles.
# These can be configured in any combination with arbitrary text and 
# HTML tags interspersed between them. 
# The buttons available are:
# $PREVIOUS - points to the previous section
# $UP  - points up to the "parent" section
# $NEXT - points to the next section
# $NEXT_GROUP - points to the next "group" section
# $PREVIOUS_GROUP - points to the previous "group" section
# $CONTENTS - points to the contents page if there is one
# $INDEX - points to the index page if there is one
#
# If the corresponding section exists the button will contain an
# active link to that section. If the corresponding section does
# not exist the button will be inactive.
#
# Also for each of the $PREVIOUS $UP $NEXT $NEXT_GROUP and $PREVIOUS_GROUP
# buttons there are equivalent $PREVIOUS_TITLE, $UP_TITLE, etc variables
# which contain the titles of their corresponding sections. 
# Each title is empty if there is no corresponding section.
#
# The subroutine below constructs the navigation panels in each page.
# Feel free to mix and match buttons, titles, your own text, your logos,
# and arbitrary HTML (the "." is the Perl concatenation operator).

# Introduced by Casiano Rodriguez León. casiano@ull.es
# If declared local has a file scope, so global
#$ERRATA_TITLE = '<B>Err:</B> <a href="perl_errata_form.html" target="_blank">Si hallas una errata ...</a>';

sub top_navigation_panel {

    # Now add a few buttons with a space between them
    "$NEXT $UP $PREVIOUS $CONTENTS $INDEX $CUSTOM_BUTTONS" .
    
    "<BR>\n" .		# Line break
	
    # If ``next'' section exists, add its title to the navigation panel
    ($NEXT_TITLE ? "<B> Sig:</B> $NEXT_TITLE\n" : undef) . 
    
    # Similarly with the ``up'' title ...
    ($UP_TITLE ? "<B>Sup:</B> $UP_TITLE\n" : undef) . 
 
    # ... and the ``previous'' title
    ($PREVIOUS_TITLE ? "<B> Ant:</B> $PREVIOUS_TITLE\n" : undef) .
   
    # ... and the ``errata'' title
    #(" $ERRATA_TITLE\n") .
   
    #  Line Break, horizontal rule (3-d dividing line) and new paragraph  
    "<BR> <P>\n"		
}

sub bot_navigation_panel {

    #  Start with a horizontal rule (3-d dividing line)
    "<HR>".			
    
    # Now add a few buttons with a space between them
    "$NEXT $UP $PREVIOUS $CONTENTS $INDEX $CUSTOM_BUTTONS" .
    
    "<BR>\n" .		# Line break
	
    # If ``next'' section exists, add its title to the navigation panel
    ($NEXT_TITLE ? "<B> Sig:</B> $NEXT_TITLE\n" : undef) . 
    
    # Similarly with the ``up'' title ...
    ($UP_TITLE ? "<B>Sup:</B> $UP_TITLE\n" : undef) . 
 
    # ... and the ``previous'' title
    ($PREVIOUS_TITLE ? "<B> Ant:</B> $PREVIOUS_TITLE\n" : undef) # .
   
    # ... and the ``errata'' title
    #(" $ERRATA_TITLE\n") 
   
}

1;	# This must be the last line
